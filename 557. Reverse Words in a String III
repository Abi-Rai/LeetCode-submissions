public class Solution {
    public string ReverseWords(string s) {
        if (s.Length == 1) return s;
        if(string.IsNullOrEmpty(s))
            return s;
        
        StringBuilder sb = new StringBuilder(s.Length);
        for(int i = 0; i < s.Length; i++){
            if(s[i]==' '|| i == s.Length-1){
                string word = i != s.Length-1 ? s.Substring(0,i): s.Substring(0, s.Length);
                if(sb.Length>0) sb.Append(" ");
                if(word.Length == 1 ){
                    sb.Append(word);
                }
                else{
                    sb.Append(WordRev(word));    
                }
                s = i!=s.Length-1 ? s.Substring(i+1) : s.Substring(s.Length);
                i = 0;
            }
            if(s.Length == 1){
                sb.Append(" ");
                sb.Append(s);
            }
        }
        return sb.ToString();
    }
    public string WordRev(string passStr){
        StringBuilder sb2 = new StringBuilder(passStr.Length);
        for(int j = passStr.Length-1; j>=0; j--){
            sb2.Append(passStr[j]);
        }
        return sb2.ToString();
    }
}
