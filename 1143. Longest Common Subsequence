public class Solution {
    public int LongestCommonSubsequence(string text1, string text2) {
        int[,] table = LCSTable(text1,text2);
        string ans = BackTrack(table,text1,text2,text1.Length,text2.Length);
        return ans.Length;
    }
    static int[,] LCSTable(string s1, string s2){
        int[,] c = new int[s1.Length + 1, s2.Length + 1];
        for (int i = 1; i <= s1.Length; i++)
            for (int j = 1; j <= s2.Length; j++)
            {
                if (s1[i - 1] == s2[j - 1])
                    c[i, j] = c[i - 1, j - 1] + 1;
                else                   
                    c[i, j] = c[i - 1, j] > c[i, j - 1]? c[i - 1, j] : c[i, j - 1];
            }
        return c;
    }

    static string BackTrack(int[,] c, string s1, string s2, int i, int j)
    {
        if (i == 0 || j == 0) 
            return "";
        else if (s1[i - 1] == s2[j - 1])
            return BackTrack(c, s1, s2, i - 1, j - 1) + s1[i - 1];
        else if (c[i, j - 1] > c[i - 1, j])
            return BackTrack(c, s1, s2, i, j - 1);
        else
            return BackTrack(c, s1, s2, i - 1, j);
    }
}
