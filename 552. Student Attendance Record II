public class Solution {
    public int CheckRecord(int n) {
        List<List<char>> rLists = new List<List<char>>();
        List<char> alpList = new List<char>(){'A','L','P'};
        List<char> rList = new List<char>();
        
        recurseRecord(0,n,rLists,alpList,rList,"");
        return rLists.Count;
    }
    
    public void recurseRecord(int l, int n, List<List<char>> rLists,List<char> alpList,List<char> rList, string current){
        if(current.Length>1 ){
            if(CheckRecord(current)== false){
                return;
            }
        }
        if(l == n){
            if(CheckRecord(current)){
                foreach(char chCur in current){
                    rList.Add(chCur);
                }
                rLists.Add(rList);
                rList.Clear();
            }
            return;
        }
        for(int j = 0; j< alpList.Count;j++){
            recurseRecord(l+1,n,rLists,alpList,rList,(current+alpList[j]));
            }
    }
    public bool CheckRecord(string s) {
        int a = 0, l=0; 
        foreach(char ch in s){
            if(ch=='A') {
                a++;
                if(a>1) return false; 
                l=0; 
                continue;
            }
            if(ch=='L') {
                l++;
                if (l>2 )return false;
                continue;
            }
            l=0; 
        }
        return true;
    }
}
