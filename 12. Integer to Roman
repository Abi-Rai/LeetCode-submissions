public class Solution {
     private static readonly Dictionary<int,string> dict = new Dictionary<int,string>(){
        
        {1000, "M"} , {900, "CM"}, {500, "D"}, {400, "CD"},
         {100, "C"}, {90, "XC"}, {50, "L"}, {40, "XL"},
         {10, "X"}, {9, "IX"}, {5, "V"}, {4, "IV"}, {1, "I"}
        
    };
    
    public string IntToRoman(int num) {
        StringBuilder sb = new StringBuilder();
        dictReverse(dict,sb,num);

        return sb.ToString();
    }
    
    static void dictReverse(Dictionary<int,string> dict, StringBuilder sb, int num){
        var enumerator = dict.GetEnumerator();
        while(enumerator.MoveNext()){
            KeyValuePair<int,string> pair = enumerator.Current;
            int key = pair.Key;
            string val = pair.Value;
            while(num/key >0){
                num-= key;
                sb.Append(val);
            }
        }
        return;
    }
}
